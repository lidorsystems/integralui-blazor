@page "/rating/overview"

<link rel="stylesheet" href="css/rating/RatingOverview.css?version=24.3.0" />

<h2>Rating / Overview</h2>
<div class="sample-block" id="rating-overview">
    <span>Free: </span><IntegralUIRating Id="rating-1" AllowFocus="false" DecimalPlaces="2" Max="@ratingMaxValue1" Value="@ratingValue1"></IntegralUIRating>
    <span>Partial: </span><IntegralUIRating Id="rating-2" AllowFocus="false" DecimalPlaces="1" Increment="IntegralUIIncrementMode.Partial" Max="@ratingMaxValue2" StepSize="@ratingStepSize2" Value="@ratingValue2"></IntegralUIRating>
    <span>Full: </span><IntegralUIRating Id="rating-3" AllowFocus="false" Increment="IntegralUIIncrementMode.Full" Max="@ratingMaxValue3" StepSize="@ratingStepSize3" Value="@ratingValue3"></IntegralUIRating>
    <div class="feature-help">
        <p><span class="initial-space"></span><strong><span class="code-name">IntegralUI</span> Rating</strong> is a Blazor Component that visualizes ratings. You can change the rating by left-click and drag the mouse cursor, by clicking the left mouse button or using touch. In addition, you can customize its appearance using different images via CSS.</p>
        <p><span class="initial-space"></span>The following properties and events are supported:</p>
        <ul class="feature-points">
            <li><span class="code-name">AllowAnimation</span> - Determines whether component appearance is animated or not</li>
            <li><span class="code-name">AllowFocus</span> - Determines whether component can have the input focus</li>
            <li><span class="code-name">Data</span> - Specifies an object that holds data related to the component</li>
            <li><span class="code-name">DecimalPlaces</span> - Specifies how many decimals are displayed in the marker value</li>
            <li><span class="code-name">Divisor</span> - Specifies a number by which rating values are divided, used to display large values within small component size</li>
            <li><span class="code-name">Enabled</span> - Determines whether the component is enabled or disabled</li>
            <li><span class="code-name">Increment</span> - Determines how the rating value changes: Free, Partial or Full</li>
            <li><span class="code-name">Min</span> - Specifies the minimum value</li>
            <li><span class="code-name">Max</span> - Specifies the maximum value</li>
            <li><span class="code-name">Name</span> - Uniquely identifies the component</li>
            <li><span class="code-name">ShowMarker</span> - Determines whether the marker is visible or not</li>
            <li><span class="code-name">State</span> - Specifies the component state: Normal or Selected.</li>
            <li><span class="code-name">StepSize</span> - Determines the width of one rating image in pixels</li>
            <li><span class="code-name">Value</span> - Holds the current progress value</li>
            <li class="feature-points-break"><br /></li>
            <li><span class="code-name">ValueChanged</span> - Occurs when Value property changes</li>
        </ul>
        <p><span class="initial-space"></span>In this example, the Rating component with stars uses Free increment mode, which allows smooth changes to the rating value (in decimals). As comparision, the Rating component with bricks uses Full increment mode, and the rating changes in integer values.</p>
    </div>
</div>

@code {

    // Rating with gold stars
    public double ratingMaxValue1 = 5;
    public double ratingValue1 = 15;

    // Rating with red stars
    public double ratingMaxValue2 = 5;
    public int ratingStepSize2 = 22;
    public double ratingValue2 = 2;

    // Rating with bricks
    public double ratingMaxValue3 = 20;
    public int ratingStepSize3 = 8;
    public double ratingValue3 = 12;

}
